module Test.Binders where

lamBinderNegInt = \(-3) -> true
lamBinderNegNum = \(-3.0) -> true
lamBinderCtor0 = \Constructor -> true
lamBinderCtor1 = \(Constructor a) -> true
lamBinderNamedBinderVar = \x@a -> true
lamBinderNamedBinderCtor0 = \x@Constructor -> true
lamBinderNamedBinderCtor1 = \x@(Constructor a) -> true
lamBinderNamedBinderOp = \x@(a /\ b) -> true
lamBinderNamedBinderTyped = \x@(a :: Type) -> true
lamBinderNamedBinderNegInt = \x@(-3) -> true
lamBinderNamedBinderNegNum = \x@(-3.0) -> true
lamBinderTyped = \(a :: Type) -> true
lamBinderOp = \(a /\ b) -> true
caseBinderNegInt = case _ of -3 -> true
caseBinderNegNum = case _ of -3.0 -> true
caseBinderCtor0 = case _ of Constructor -> true
caseBinderCtor1 = case _ of Constructor a -> true
caseBinderNamedBinderVar = case _ of x@a -> true
caseBinderNamedBinderCtor0 = case _ of x@Constructor -> true
caseBinderNamedBinderCtor1 = case _ of x@(Constructor a) -> true
caseBinderNamedBinderOp = case _ of x@(a /\ b) -> true
caseBinderNamedBinderTyped = case _ of x@(a :: Type) -> true
caseBinderNamedBinderNegInt = case _ of x@(-3) -> true
caseBinderNamedBinderNegNum = case _ of x@(-3.0) -> true
caseBinderTyped = case _ of (a :: Type) -> true
caseBinderOp = case _ of a /\ b -> true
