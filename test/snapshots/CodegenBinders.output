module Test.Binders where

lamBinderCtor0 = \Constructor -> true
lamBinderCtor1 = \(Constructor a) -> a
lamBinderNamedBinderVar = \alpha@a -> a
lamBinderNamedBinderCtor0 = \alpha@Constructor -> a
lamBinderNamedBinderCtor1 = \alpha@(Constructor a) -> a
lamBinderNamedBinderOp = \alpha@(a /\ b) -> a
lamBinderNamedBinderTyped = \alpha@(a :: Type) -> a
lamBinderNamedBinderNegInt = \alpha@(-3) -> a
lamBinderNamedBinderNegNum = \alpha@(-3.0) -> a
lamBinderTyped = \(a :: Type) -> a
lamBinderOp = \(a /\ b) -> a
lamBinderNegInt = \(-3) -> -3
lamBinderNegNum = \(-3.0) -> -3.0
caseBinderCtor0 = case _ of Constructor -> true
caseBinderCtor1 = case _ of Constructor a -> true
caseBinderNamedBinderVar = case _ of alpha@a -> true
caseBinderNamedBinderCtor0 = case _ of alpha@Constructor -> true
caseBinderNamedBinderCtor1 = case _ of alpha@(Constructor a) -> true
caseBinderNamedBinderOp = case _ of alpha@(a /\ b) -> true
caseBinderNamedBinderTyped = case _ of alpha@(a :: Type) -> true
caseBinderNamedBinderNegInt = case _ of alpha@(-3) -> true
caseBinderNamedBinderNegNum = case _ of alpha@(-3.0) -> true
caseBinderTyped = case _ of (a :: Type) -> true
caseBinderOp = case _ of a /\ b -> true
caseBinderNegInt = case _ of -3 -> true
caseBinderNegNum = case _ of -3.0 -> true
